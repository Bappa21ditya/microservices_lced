


   server:
    port: 8081




   spring:


     application:
       name: USER-SERVICE


     datasource:
       url: jdbc:mysql://localhost:3306/microservices
       username: root
       password: Bappa@1999
       driver-class-name: com.mysql.cj.jdbc.Driver


     jpa:
       hibernate:
         ddl-auto: update
         show-sql: true
       properties:
          hibernate:
            dialect: org.hibernate.dialect.MySQL8Dialect



     config:
       import: configserver:http://localhost:8086



     security:
       oauth2:
         resourceserver:
           jwt:
             issuer-uri: https://dev-73070780.okta.com/oauth2/default
         client:
           registration:
             my-internal-client:
               provider: okta
               authorization-grant-type: client_credentials
               scope: internal
               client-id: 0oa93pju8l0IGgIW15d7
               client-secret: CGhprXz9L4Ad0o4EuFSeCMItx6MxoFcnpneGPCDT

           provider:
             okta:
               issuer-uri: https://dev-73070780.okta.com/oauth2/default



   management:
    health:
      circuitbreakers:
        enabled: true
      endpoints:
       web:
         exposure:
           include: health

       endpoint:
        health:
         show-details: always

   resilience4j:
    circuitbreaker:
      instances:
       ratingHotelBreaker:
        registerHealthIndicator: true
        eventConstantBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

      retry:
        instances:
          ratingHotelService:
            max-attempts: 3
            wait-duration: 2s


      ratelimiter:
        instances:
         userRateLimiter:
           limit-refresh-period: 4s
           limit-for-period:  2
           timeout-duration: 0s




    okta:
      oauth2:
        issuer: https://dev-73070780.okta.com/oauth2/default
        audience: api://default


#   eureka:
#     instance:
#      prefer-ip-address: true
#     client:
#      fetch-registry: true
#      register-with-eureka: true
#      service-url:
#        defaultZone: http://localhost:8761/eureka


